@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Testapplication1.Services
@model IEnumerable<Notification>

@{
    ViewData["Title"] = "Notifications";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/Notification.css" asp-append-version="true">
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js" integrity="sha256-WBkoXOwTeyKclOHuWtc+i2uENFpDZ9YPdf5Hf+D7ewM=" crossorigin=""></script>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css"
          integrity="sha256-kLaT2GOSpHechhsozzB+flnD+zUyjE2LlfWPgU04xyI="
          crossorigin="" />
    <style>
        .map {
            width: 90%;
            height: 300px;
            margin: 5%;
        }
    </style>
    <title>Notifications</title>
</head>
<body>
    <div class="container">
        <div class="wrapper">
            <i class='bx bx-alarm-exclamation'></i>
                <div class="bck_button">
                    @if (UserDAO.CurrentRanger.IsAdmin)
                    {
                        <input type="button" value="Back to Home" onclick="location.href='@Url.Action("ReturnHome", "Notifications")'" />
                    }
                    else
                    {
                        <input type="button" value="Logout" onclick="location.href='@Url.Action("ProcessLogout", "Login")'" />
                    }
                </div>
            <h1 class="label-text">Notifications</h1>
            <div id="map" class="map"></div>
            <div style="overflow-x:auto;  margin:5%;">

                <table class="content-table">
                    <thead>
                        <tr>
                            <th>
                                <i class='bx bx-refresh' onClick="window.location.reload()"> </i>
                            </th>
                            <th>Notifications</th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {

                            <tr>
                                <td>
                                    <a asp-action="Details" class="Detail_button" asp-route-id="@item.ID">Details</a>
                                </td>
                                <td>
                                    <audio controls>
                                        <source src="@(item.Sound)" type="audio/wav" />
                                        Your browser does not support the audio element.
                                    </audio><br>
                                    @Html.DisplayFor(modelItem => item.Time)<br>

                                    @Html.DisplayFor(modelItem => item.Sound_Type)

                                    @Html.DisplayFor(modelItem => item.Probability)%<br>
                                    
                                    @if (item.Status == "Open"){
                                        <div style="color: green; font-weight: bold">
                                            @Html.DisplayFor(modelItem => item.Status)
                                        </div>
                                    }
                                    else if (item.Status == "In Progress"){
                                        <div style="color: yellow; font-weight: bold">
                                            @Html.DisplayFor(modelItem => item.Status)
                                        </div>
                                    }
                                    else{
                                        <div style="color: red; font-weight: bold">
                                            @Html.DisplayFor(modelItem => item.Status)
                                        </div>
                                    }
                                    
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    

    <script>
    
        var map = L.map("map", {
            minZoom: 0,
            maxZoom: 16,

        }).setView([0, 20], 3);
        L.tileLayer("https://api.maptiler.com/maps/streets-v2/{z}/{x}/{y}.png?key=vbWSgaVomjqBXBlqx78m", {
            // attribution: '<a href="https://www.openstreetmap.org/copyright" target="_blank">&copy; OpenStreetMap contributors</a>',
        }).addTo(map)

        var southWest = L.latLng(-89.98155760646617, -180),
            northEast = L.latLng(89.99346179538875, 180);
        var bounds = L.latLngBounds(southWest, northEast);

        map.setMaxBounds(bounds);
        map.on('drag', function () {
            map.panInsideBounds(bounds, { animate: false });
        });

        map.attributionControl.setPrefix("Chengeta Wildlife")
        var greenIcon = new L.Icon({
            iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',
            shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
            shadowSize: [41, 41]
        });

        var redIcon = new L.Icon({
            iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',
            shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
            shadowSize: [41, 41]
        });

        var yellowIcon = new L.Icon({
            iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-yellow.png',
            shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
            shadowSize: [41, 41]
        });

        var violetIcon = new L.Icon({
            iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-violet.png',
            shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
            shadowSize: [41, 41]
        });


        

        $.ajax({
            url: '/Notifications/GetBranch',
            success: function (data) {
                
                $(data).each(function (index, item) {
                    var lat = item.latitude;
                    var long = item.longitude;

                    if (item.sound_Type == "gunshot") {
                        L.marker([lat, long], { icon: redIcon }).addTo(map).bindPopup("Latitude: " + item.latitude + "<br>" + "Longitude: " + item.longitude + "<br>" + "Sound type: " + item.sound_Type + "<br>" + "Probability: " + item.probability + "%");
                    }
                    else if (item.sound_Type == "animal"){
                         L.marker([lat, long], { icon: greenIcon }).addTo(map).bindPopup("Latitude: " + item.latitude + "<br>" + "Longitude: " + item.longitude + "<br>" + "Sound type: " + item.sound_Type + "<br>" + "Probability: " + item.probability + "%");
                    }
                    else if (item.sound_Type == "thunder"){
                        L.marker([lat, long], { icon: yellowIcon }).addTo(map).bindPopup("Latitude: " + item.latitude + "<br>" + "Longitude: " + item.longitude + "<br>" + "Sound type: " + item.sound_Type + "<br>" + "Probability: " + item.probability + "%");
                    }
                    else if (item.sound_Type == "vehicle"){
                        L.marker([lat, long], { icon: violetIcon }).addTo(map).bindPopup("Latitude: " + item.latitude + "<br>" + "Longitude: " + item.longitude + "<br>" + "Sound type: " + item.sound_Type + "<br>" + "Probability: " + item.probability + "%");
                    }
                    else{
                        L.marker([lat, long]).addTo(map).bindPopup("Latitude: " + item.latitude + "<br>" + "Longitude: " + item.longitude + "<br>" + "Sound type: " + item.sound_Type + "<br>" + "Probability: " + item.probability + "%");
                    }

                    
                    
                });
            },
        });

    </script>
</body>
</html>
